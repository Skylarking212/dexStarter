{"ast":null,"code":"/*import React, {useState, useEffect} from 'react'\nimport { Input, Popover, Radio, Modal, message } from \"antd\";\nimport {\n  ArrowDownOutlined,\n  DownOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport tokenList from \"../tokenList.json\";\n\nfunction Swap() {\n  const [slippage, setSlippage] = useState(2.5);\n  const [tokenOneAmount, setTokenOneAmount] = useState(null);\n  const [tokenTwoAmount, setTokenTwoAmount] = useState(null);\n  const [tokenOne, setTokenOne] = useState(tokenList[0]);\n  const [tokenTwo, setTokenTwo] = useState(tokenList[1]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [changeToken, setChangeToken] = useState(1);\n\n  function handleSlippageChange(e){\n    setSlippage(e.target.value);\n  }\n\n  function changeAmount(e){\n    setTokenOneAmount(e.target.value)\n  }\n\n  function switchTokens(){\n    const one = tokenOne;\n    const two = tokenTwo;\n    setTokenOne (two);\n    setTokenTwo (one);\n  }\n\n  function openModal(asset){\n    setChangeToken(asset);\n    setIsOpen(true);\n  }\n\n  const settings = (\n    <>\n      <div>Slippage Tolerance</div>\n      <div>\n        <Radio.Group value={slippage} onChange={handleSlippageChange}>\n          <Radio.Button value={0.5}>0.5%</Radio.Button>\n          <Radio.Button value={2.5}>2.5%</Radio.Button>\n          <Radio.Button value={5}>5%</Radio.Button>\n        </Radio.Group>\n      </div>\n    \n    </>\n\n  )\n  return (\n    <>\n    <Modal\n      open={isOpen}\n      footer={null}\n      onCancel={() => setIsOpen(false)}\n      title=\"Select a token\"\n    >\n\n    </Modal>\n    <div className=\"tradeBox\">\n        <div className=\"tradeBoxHeader\">\n          <h4>Swap</h4>\n          <Popover\n            content={settings}\n            title=\"Settings\"\n            trigger=\"click\"\n            placement=\"bottomRight\"\n          >\n            <SettingOutlined classname=\"cog\" />\n          </Popover>\n        </div>\n        <div className=\"inputs\">\n          <Input placeholder=\"0\" value={tokenOneAmount} onChange={changeAmount} />\n          <Input placeholder=\"0\" value={tokenTwoAmount} disabled={true} />\n          <div className=\"switchButton\" onClick={switchTokens}>\n            <ArrowDownOutlined className=\"switchArrow\" />\n          </div>\n          <div className=\"assetOne\" onClick={() => openModal(1)}>\n            <img src={tokenOne.img} alt=\"assetOneLogo\" className=\"assetLogo\" />\n            {tokenOne.ticker}\n            <DownOutlined />\n          </div>\n          <div className=\"assetTwo\" onClick={() => openModal(2)}>\n          <img src={tokenTwo.img} alt=\"assetTwoLogo\" className=\"assetLogo\" />\n            {tokenTwo.ticker}\n            <DownOutlined />\n          </div>\n        </div>\n    </div>\n    </>\n  )\n}\n\nexport default Swap */","map":{"version":3,"names":[],"sources":["/Users/olivertaylor/Downloads/Work/Foundation Swap/dexStarter/dex/src/components/Swap.js"],"sourcesContent":["/*import React, {useState, useEffect} from 'react'\nimport { Input, Popover, Radio, Modal, message } from \"antd\";\nimport {\n  ArrowDownOutlined,\n  DownOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport tokenList from \"../tokenList.json\";\n\nfunction Swap() {\n  const [slippage, setSlippage] = useState(2.5);\n  const [tokenOneAmount, setTokenOneAmount] = useState(null);\n  const [tokenTwoAmount, setTokenTwoAmount] = useState(null);\n  const [tokenOne, setTokenOne] = useState(tokenList[0]);\n  const [tokenTwo, setTokenTwo] = useState(tokenList[1]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [changeToken, setChangeToken] = useState(1);\n\n  function handleSlippageChange(e){\n    setSlippage(e.target.value);\n  }\n\n  function changeAmount(e){\n    setTokenOneAmount(e.target.value)\n  }\n\n  function switchTokens(){\n    const one = tokenOne;\n    const two = tokenTwo;\n    setTokenOne (two);\n    setTokenTwo (one);\n  }\n\n  function openModal(asset){\n    setChangeToken(asset);\n    setIsOpen(true);\n  }\n\n  const settings = (\n    <>\n      <div>Slippage Tolerance</div>\n      <div>\n        <Radio.Group value={slippage} onChange={handleSlippageChange}>\n          <Radio.Button value={0.5}>0.5%</Radio.Button>\n          <Radio.Button value={2.5}>2.5%</Radio.Button>\n          <Radio.Button value={5}>5%</Radio.Button>\n        </Radio.Group>\n      </div>\n    \n    </>\n\n  )\n  return (\n    <>\n    <Modal\n      open={isOpen}\n      footer={null}\n      onCancel={() => setIsOpen(false)}\n      title=\"Select a token\"\n    >\n\n    </Modal>\n    <div className=\"tradeBox\">\n        <div className=\"tradeBoxHeader\">\n          <h4>Swap</h4>\n          <Popover\n            content={settings}\n            title=\"Settings\"\n            trigger=\"click\"\n            placement=\"bottomRight\"\n          >\n            <SettingOutlined classname=\"cog\" />\n          </Popover>\n        </div>\n        <div className=\"inputs\">\n          <Input placeholder=\"0\" value={tokenOneAmount} onChange={changeAmount} />\n          <Input placeholder=\"0\" value={tokenTwoAmount} disabled={true} />\n          <div className=\"switchButton\" onClick={switchTokens}>\n            <ArrowDownOutlined className=\"switchArrow\" />\n          </div>\n          <div className=\"assetOne\" onClick={() => openModal(1)}>\n            <img src={tokenOne.img} alt=\"assetOneLogo\" className=\"assetLogo\" />\n            {tokenOne.ticker}\n            <DownOutlined />\n          </div>\n          <div className=\"assetTwo\" onClick={() => openModal(2)}>\n          <img src={tokenTwo.img} alt=\"assetTwoLogo\" className=\"assetLogo\" />\n            {tokenTwo.ticker}\n            <DownOutlined />\n          </div>\n        </div>\n    </div>\n    </>\n  )\n}\n\nexport default Swap */"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}